#!/bin/bash

show_help() {
  cat <<EOF

$ExecName version $Version

Usage:
$ExecName [options] HOST

lists the absolute paths to a set of iRODS log files that are on a given server

Parameters:
 HOST  The name of the iRODS server to dump the logs from

Options:
 -h, --help          show help and exit
 -N, --name-pattern  a wildcard expression describing the name of the log files
                     to list, default is "*"
 -P, --password      a password needed to connect to the server
 -v, --version       show version and exit

Â© 2021, The Arizona Board of Regents on behalf of The University of Arizona. For
license information, see https://cyverse.org/license.
EOF
}


set -o nounset -o pipefail

readonly ExecAbsPath=$(readlink --canonicalize "$0")
readonly ExecName=$(basename "$ExecAbsPath")
readonly Version=1
readonly LogDir=/var/lib/irods/iRODS/server/log


main() {
  local opts
  if ! opts=$(format_opts "$@")
  then
    show_help >&2
    return 1
  fi

  eval set -- "$opts"

  local password=
  local namePattern='*'

  while true
  do
    case "$1" in
      -h|--help)
        show_help
        return 0
        ;;
      -N|--name-pattern)
        namePattern="$2"
        shift 2
        ;;
      -P|--password)
        password="$2"
        shift 2
        ;;
      -v|--version)
        show_version
        return 0
        ;;
      --)
        shift
        break
        ;;
      *)
        show_help >&2
        return 1
        ;;
    esac
  done

  if [[ "$#" -lt 1 ]]
  then
    show_help >&2
    return 1
  fi

  local host="$1"

  list_logs "$host" "$password" "$namePattern" | sort
}


format_opts() {
  getopt \
    --longoptions help,name-pattern:,password:,version \
    --options hN:P:v \
    --name "$ExecName" \
    -- "$@"
}


show_version() {
  printf '%s\n' "$Version"
}


list_logs() {
  local host="$1"
  local password="$2"
  local namePattern="$3"

  #shellcheck disable=SC2087
  mk_list_logs_script "$password" "$namePattern" \
    | ssh -q -t "$host" 2> /dev/null \
    | sed --quiet '/^\/p'
}


mk_list_logs_script() {
  local password="$1"
  local namePattern="$2"

  cat <<EOF
if ! find "$LogDir" -maxdepth 1 -name "$namePattern" -type f 2> /dev/null
then
  printf '%s\n' "$password" | sudo -S find "$LogDir" -maxdepth 1 -name "$namePattern" -type f
fi
EOF
}


main "$@"
