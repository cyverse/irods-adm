#!/bin/bash
#
# This program filters a list of iRODS sessions for those that overlap with a
# given time interval. It reads the sessions from standard in and writes the
# filtered sessions to standard out.
#
# USAGE:
#  filter-sessions-by-time ERA_BEGIN ERA_END
#
# PARAMETERS:
#  ERA_BEGIN:  The beginning time of the interval of interest. The time should
#              be specified in the form `yyyy-MM-dd hh:mm:ss`.
#  ERA_END:    The ending time of the interval of interest. The time should be
#              specified in the form `yyyy-MM-dd hh:mm:ss`.
#
# EXAMPLE:
#  filter-sessions-by-time '2018-01-24 14:08:56' '2018-01-24 14:09:34' \
#    < irods.sessions

set -o errexit -o nounset -o pipefail

if [[ "$#" -lt 2 ]]
then
  exit 1
fi

readonly EraBegin="$1"
readonly EraEnd="$2"

awk --assign ERA_BEGIN="$EraBegin" --assign ERA_END="$EraEnd" --file - <(cat) <<'EOF'
function validate_era(eraName, eraVal) {
  if (eraVal !~ /^[0-9][0-9][0-9][0-9]-[0-1][0-9]-[0-3][0-9] [0-2][0-9]:[0-5][0-9]:[0-6][0-9]$/) {
    printf "%s has invalid format: '%s'\n", eraName, eraVal > "/dev/stderr";
    exit 1;
  }
}


BEGIN {
  validate_era("ERA_BEGIN", ERA_BEGIN);
  validate_era("ERA_END", ERA_END);

  RS = "ยง";
  FS = "โข";
}

{
  beginTime = substr($2, 2, 19);
  endTime = substr($NF, 2, 19);

  if (beginTime <= ERA_END && endTime >= ERA_BEGIN) {
    printf "ยง%s", $0;
  }
}
EOF
