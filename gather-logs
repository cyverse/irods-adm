#!/bin/bash

show_help()
{
  # shellcheck disable=SC2006
  cat \
<<EOF

$ExecName version $Version

Usage:
 $ExecName [options] <irods_server>

Downloads iRODS log entries from <irods_server>

Parameters:
 <irods_server>  the iRODS server containing the log files

Options:
 -E, --extension-pattern  A globbing pattern applied to the log files'
                          extension. Only entries from the matching files will
                          be downloaded.
 -P, --password           A password, if any, the user needs to execute sudo on
                          <irods_server>.

 -h, --help     show help and exit
 -v, --version  show version and exit

Summary:
This program downloads all of the log entries from <irods_server>. The set of
log files may be restricted to those with certain file extensions. Each entry is
formatted by `format-log-entries`.

The program first connects to the server as the current user. Once on the server,
it uses sudo to inspect the log file. If sudo will request a password, it should
be provided using the appropriate command line option.
EOF
}


set -o nounset

readonly Version=1
readonly ExecAbsPath=$(readlink --canonicalize "$0")
readonly ExecName=$(basename "$ExecAbsPath")
readonly ExecDir=$(dirname "$ExecAbsPath")
readonly LogBase=rodsLog


main()
{
  local opts
  if ! opts=$(format_opts "$@")
  then
    show_help >&2
    return 1
  fi

  eval set -- "$opts"

  local extPat='*'
  local password=

  while true
  do
    case "$1" in
      -E|--extension-pattern)
        extPat="$2"
        shift 2
        ;;
      -h|--help)
        show_help
        return 0
        ;;
      -P|--password)
        password="$2"
        shift 2
        ;;
      -v|--version)
        printf '%s' "$Version"
        return 0
        ;;
      --)
        shift
        break
        ;;
      *)
        show_help >&2
        return 1
        ;;
    esac
  done

  if [[ "$#" -lt 1 ]]
  then
    show_help >&2
    return 1
  fi

  local host="$1"

  gather_logs "$host" "$password" "$extPat"
}


format_opts()
{
  getopt \
    --longoptions extension-pattern:,help,password:,version \
    --options E:hP:v \
    --name "$ExecName" \
    -- \
    "$@"
}


gather_logs()
{
  local host="$1"
  local password="$2"
  local extPat="$3"

  local namePat="$LogBase"."$extPat"

  local log
  for log in $("$ExecDir"/list-rods-logs --name-pattern "$namePat" --password "$password" "$host")
  do
    local logName
    logName=$(basename "$log")

    rcat_log "$host" "$password" "$log" \
      | "$ExecDir"/format-log-entries --assign YEAR="${logName:8:4}"

    printf 'gather_logs:  finished processing %s\n' "$logName" >&2
  done
}


rcat_log()
{
  local host="$1"
  local password="$2"
  local log="$3"

  #shellcheck disable=SC2087
  ssh -q -t "$host" 2> /dev/null \
<<EOF
  printf '%s\n' "$password" | sudo -S cat "$log"
EOF
}


main "$@"
