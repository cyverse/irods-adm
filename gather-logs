#!/bin/bash

set -o nounset

readonly ExecAbsPath=$(readlink --canonicalize "$0")
readonly ExecName=$(basename "$ExecAbsPath")
readonly ExecDir=$(dirname "$ExecAbsPath")
readonly LogBase=rodsLog


main()
{
  local opts
  if ! opts=$(format_opts "$@")
  then
    printf 'failed to parse options\n' >&2
    return 1
  fi

  eval set -- "$opts"

  local extPat='*'
  local password=

  while true
  do
    case "$1" in
      -E|--extension-pattern)
        extPat="$2"
        shift 2
        ;;
      -P|--password)
        password="$2"
        shift 2
        ;;
      --)
        shift
        break
        ;;
      *)
        printf 'unknown option, %s\n' "$1" >&2
        return 1
        ;;
    esac
  done

  if [[ "$#" -lt 1 ]]
  then
    printf 'The name of the iRODS server is required\n' >&2
    return 1
  fi

  local host="$1"

  local namePat="$LogBase"."$extPat"

  local log
  for log in $("$ExecDir"/list-rods-logs --name-pattern "$namePat" --password "$password" "$host")
  do
    local logName
    logName=$(basename "$log")

    rcat_log "$host" "$password" "$log" \
      | "$ExecDir"/format-log-entries --assign YEAR="${logName:8:4}"

    printf 'gather_logs:  finished processing %s\n' "$logName" >&2
  done
}


format_opts()
{
  getopt --longoptions extension-pattern:,password: --options E:P: --name "$ExecName" -- "$@"
}


rcat_log()
{
  local host="$1"
  local password="$2"
  local log="$3"

  #shellcheck disable=SC2087
  ssh -q -t "$host" 2> /dev/null \
<<EOF
  printf '%s\n' "$password" | sudo -S cat "$log"
EOF
}


main "$@"
